import { z } from "zod";
import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";

export function registerCVEAnalysisPrompt(server: McpServer) {
  server.prompt(
    "cve-analysis",
    "Generate a comprehensive analysis of a CVE including exploitation status and risk assessment",
    {
      cve_id: z.string().describe("The CVE ID to analyze (e.g., CVE-2023-6549)"),
      timeframe: z.string().optional().describe("Number of days to look back for activity data (1-90)"),
    },
    async (args, extra) => {
      const cveId = args.cve_id;
      const timeframe = args.timeframe ? parseInt(args.timeframe, 10) : 30;

      const description = `Comprehensive analysis of ${cveId}`;

      return {
        description,
        messages: [
          {
            role: "user",
            content: {
              type: "text",
              text: `
Generate a comprehensive analysis of ${cveId} using GreyNoise threat intelligence data from the past ${timeframe} days.

Use the following tools to gather data for your analysis:
1. First, use the get-cve-details tool with the CVE ID to get detailed information
2. Then, use the gnql-stats tool with the query 'cve:${cveId}' to get statistical information about exploitation
3. Use the search-tags tool with the CVE query to find any tags associated with this vulnerability
4. For each relevant tag found, use the get-tag-activity tool to assess recent activity patterns

Your report should include:
1. Executive Summary
2. Vulnerability Details (from CVE database)
3. Current Exploitation Status (Active/Inactive)
4. Exploitation Trends and Patterns
5. Affected Systems and Products
6. Attack Vectors and Techniques
7. Geographical Distribution of Attacks
8. Mitigation Recommendations
9. Risk Assessment Score (Critical/High/Medium/Low)
`,
            },
          },
        ],
      };
    },
  );
}
